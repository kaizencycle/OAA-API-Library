name: Quest Verifier Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'lore/quests/**'
      - 'ops/seeds/**'
      - 'scripts/test-quest-verifier.mjs'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'lore/quests/**'
      - 'ops/seeds/**'
      - 'scripts/test-quest-verifier.mjs'

jobs:
  test-quest-verifier:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create test directories
      run: |
        mkdir -p ops/seeds
        mkdir -p lore/quests
        
    - name: Create sample CSV if not exists
      run: |
        if [ ! -f ops/seeds/secret-seeds.csv ]; then
          echo "questId,proofId,playerId" > ops/seeds/secret-seeds.csv
          echo "test-quest-1,proof-123,player-456" >> ops/seeds/secret-seeds.csv
          echo "test-quest-2,proof-789,player-012" >> ops/seeds/secret-seeds.csv
          echo "test-quest-3,proof-345,player-678" >> ops/seeds/secret-seeds.csv
        fi
        
    - name: Create sample quest files for testing
      run: |
        # Create test quest files with proper front-matter
        cat > lore/quests/test-quest-1.md << 'QUEST1'
---
id: test-quest-1
title: Test Quest 1
kind: secret
canonLevel: B
secretHash: sha256:placeholder
accord: truth
region: test
archetype:
  western: hero
  eastern: warrior
---

# Test Quest 1

This is a test quest for verification.
QUEST1

        cat > lore/quests/test-quest-2.md << 'QUEST2'
---
id: test-quest-2
title: Test Quest 2
kind: secret
canonLevel: B
secretHash: sha256:placeholder
accord: trust
region: test
archetype:
  western: sage
  eastern: monk
---

# Test Quest 2

This is another test quest for verification.
QUEST2

        cat > lore/quests/test-quest-3.md << 'QUEST3'
---
id: test-quest-3
title: Test Quest 3
kind: secret
canonLevel: B
secretHash: sha256:placeholder
accord: care
region: test
archetype:
  western: explorer
  eastern: wanderer
---

# Test Quest 3

This is a third test quest for verification.
QUEST3
        
    - name: Generate secret hashes for test quests
      run: |
        # Generate hashes using the same logic as the test
        SECRET_SALT="test-salt-for-ci"
        
        # Quest 1
        HASH1=$(echo -n "proof-123:player-456:${SECRET_SALT}" | sha256sum | cut -d' ' -f1)
        sed -i "s/sha256:placeholder/sha256:${HASH1}/" lore/quests/test-quest-1.md
        
        # Quest 2
        HASH2=$(echo -n "proof-789:player-012:${SECRET_SALT}" | sha256sum | cut -d' ' -f1)
        sed -i "s/sha256:placeholder/sha256:${HASH2}/" lore/quests/test-quest-2.md
        
        # Quest 3
        HASH3=$(echo -n "proof-345:player-678:${SECRET_SALT}" | sha256sum | cut -d' ' -f1)
        sed -i "s/sha256:placeholder/sha256:${HASH3}/" lore/quests/test-quest-3.md
        
    - name: Run quest verifier tests
      run: npm run test:quest-verifier:verbose
      env:
        SECRET_SALT: test-salt-for-ci
        
    - name: Test with different salt (should fail)
      run: |
        # This should fail because the hashes won't match
        if npm run test:quest-verifier 2>/dev/null; then
          echo "❌ Test should have failed with different salt"
          exit 1
        else
          echo "✅ Test correctly failed with different salt"
        fi
      env:
        SECRET_SALT: different-salt
        
    - name: Test with missing quest file (should fail)
      run: |
        # Remove a quest file to test error handling
        rm lore/quests/test-quest-2.md
        if npm run test:quest-verifier 2>/dev/null; then
          echo "❌ Test should have failed with missing quest file"
          exit 1
        else
          echo "✅ Test correctly failed with missing quest file"
        fi
      env:
        SECRET_SALT: test-salt-for-ci
