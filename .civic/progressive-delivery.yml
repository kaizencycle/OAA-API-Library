# Progressive Delivery Configuration
# This file defines how changes are rolled out progressively across environments

version: "1.0"
name: "Civic Progressive Delivery"

# Environment definitions
environments:
  development:
    canary_percentage: 100
    auto_promote: true
    health_check_path: "/api/integrity-check"
    rollback_threshold: 0.5
    monitoring_duration: "5m"
    
  staging:
    canary_percentage: 50
    auto_promote: true
    health_check_path: "/api/integrity-check"
    rollback_threshold: 0.7
    monitoring_duration: "10m"
    
  production:
    canary_percentage: 5
    auto_promote: false
    health_check_path: "/api/integrity-check"
    rollback_threshold: 0.9
    monitoring_duration: "30m"

# Rollout strategy
rollout_strategy:
  # Initial canary deployment
  canary:
    percentage: 5
    duration: "10m"
    success_criteria:
      error_rate: "< 1%"
      response_time: "< 500ms"
      integrity_score: "> 0.9"
    
  # Gradual increase
  gradual:
    steps:
      - percentage: 10
        duration: "15m"
        success_criteria:
          error_rate: "< 1%"
          response_time: "< 500ms"
          integrity_score: "> 0.9"
      - percentage: 25
        duration: "20m"
        success_criteria:
          error_rate: "< 1%"
          response_time: "< 500ms"
          integrity_score: "> 0.9"
      - percentage: 50
        duration: "30m"
        success_criteria:
          error_rate: "< 1%"
          response_time: "< 500ms"
          integrity_score: "> 0.9"
      - percentage: 100
        duration: "60m"
        success_criteria:
          error_rate: "< 1%"
          response_time: "< 500ms"
          integrity_score: "> 0.9"

# Health check configuration
health_checks:
  integrity_check:
    endpoint: "/api/integrity-check"
    timeout: "5s"
    interval: "30s"
    failure_threshold: 3
    success_threshold: 2
    
  citizen_shield:
    endpoint: "/api/citizen-shield/status"
    timeout: "3s"
    interval: "15s"
    failure_threshold: 2
    success_threshold: 1
    
  performance_check:
    endpoint: "/api/performance/metrics"
    timeout: "10s"
    interval: "60s"
    failure_threshold: 2
    success_threshold: 1

# Rollback configuration
rollback:
  automatic: true
  triggers:
    - error_rate: "> 5%"
    - response_time: "> 2000ms"
    - integrity_score: "< 0.8"
    - citizen_shield_alert: true
    - manual_trigger: true
  
  process:
    - stop_traffic_to_new_version
    - route_traffic_to_previous_version
    - notify_stakeholders
    - create_incident_report
    - update_ledger_with_rollback

# Monitoring and alerting
monitoring:
  metrics:
    - name: "error_rate"
      type: "counter"
      threshold: 5
      unit: "percent"
      
    - name: "response_time"
      type: "histogram"
      threshold: 2000
      unit: "milliseconds"
      
    - name: "integrity_score"
      type: "gauge"
      threshold: 0.8
      unit: "score"
      
    - name: "throughput"
      type: "counter"
      threshold: 1000
      unit: "requests_per_second"
  
  alerts:
    - name: "High Error Rate"
      condition: "error_rate > 5%"
      severity: "critical"
      action: "auto_rollback"
      
    - name: "Slow Response Time"
      condition: "response_time > 2000ms"
      severity: "warning"
      action: "investigate"
      
    - name: "Low Integrity Score"
      condition: "integrity_score < 0.8"
      severity: "critical"
      action: "auto_rollback"
      
    - name: "Citizen Shield Alert"
      condition: "citizen_shield_alert == true"
      severity: "critical"
      action: "immediate_rollback"

# Notification configuration
notifications:
  channels:
    - type: "slack"
      webhook_url: "${SLACK_WEBHOOK_URL}"
      events: ["deployment_started", "deployment_completed", "rollback_triggered"]
      
    - type: "email"
      recipients: ["devops@company.com", "security@company.com"]
      events: ["rollback_triggered", "critical_alert"]
      
    - type: "ledger"
      endpoint: "/api/ledger/notify"
      events: ["all"]

# Security considerations
security:
  require_approval_for:
    - production_deployments
    - security_critical_changes
    - database_migrations
    
  approval_workflow:
    - technical_lead: true
    - security_lead: true
    - product_owner: false
    
  audit_logging:
    enabled: true
    retention_days: 90
    events: ["deployment", "rollback", "approval", "rejection"]

# Performance requirements
performance:
  max_deployment_time: "30m"
  max_rollback_time: "5m"
  resource_limits:
    cpu: "1000m"
    memory: "2Gi"
    storage: "10Gi"
  
  scaling:
    min_replicas: 2
    max_replicas: 10
    target_cpu_utilization: 70
    target_memory_utilization: 80